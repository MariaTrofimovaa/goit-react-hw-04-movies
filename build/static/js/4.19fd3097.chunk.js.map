{"version":3,"sources":["services/api.js","images/defaultMovie.png","components/moviesList/MovieListStyled.js","components/moviesList/MoviesList.js","pages/homePage/HomePage.js"],"names":["apiKey","fetchMovies","a","axios","get","response","data","results","console","log","searchMovies","query","fetchMovieDetail","id","fetchMovieCast","cast","fetchMovieReviews","MovieListContainer","styled","ul","withRouter","movies","location","map","movie","className","to","pathname","state","from","src","poster_path","defaultMovie","alt","original_title","title","HomePage","then","setState","this","props","Component"],"mappings":"qTAEMA,EAAS,mCAGFC,EAAW,uCAAG,4BAAAC,EAAA,+EAEAC,IAAMC,IAAN,6DACiCJ,EADjC,2BAFA,cAEjBK,EAFiB,yBAKhBA,EAASC,KAAKC,SALE,gCAOvBC,QAAQC,IAAR,MAPuB,yDAAH,qDAYXC,EAAY,uCAAG,WAAOC,GAAP,eAAAT,EAAA,+EAEDC,IAAMC,IAAN,4DACgCJ,EADhC,iCAC+DW,EAD/D,gCAFC,cAElBN,EAFkB,yBAKjBA,EAASC,KAAKC,SALG,gCAOxBC,QAAQC,IAAR,MAPwB,yDAAH,sDAYZG,EAAgB,uCAAG,WAAOC,GAAP,eAAAX,EAAA,+EAELC,IAAMC,IAAN,6CACiBS,EADjB,oBAC+Bb,EAD/B,oBAFK,cAEtBK,EAFsB,yBAKrBA,EAASC,MALY,gCAO5BE,QAAQC,IAAR,MAP4B,yDAAH,sDAYhBK,EAAc,uCAAG,WAAOD,GAAP,eAAAX,EAAA,+EAEHC,IAAMC,IAAN,6CACiBS,EADjB,4BACuCb,EADvC,oBAFG,cAEpBK,EAFoB,yBAKnBA,EAASC,KAAKS,MALK,gCAO1BP,QAAQC,IAAR,MAP0B,yDAAH,sDAYdO,EAAiB,uCAAG,WAAOH,GAAP,eAAAX,EAAA,+EAENC,IAAMC,IAAN,6CACiBS,EADjB,4BACuCb,EADvC,2BAFM,cAEvBK,EAFuB,yBAKtBA,EAASC,KAAKC,SALQ,gCAO7BC,QAAQC,IAAR,MAP6B,yDAAH,uD,gCCrDf,QAA0B,0C,iECE5BQ,E,MAAqBC,EAAOC,GAAV,gX,eCqChBC,iBAlCI,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,SAAUX,EAAY,EAAZA,MACtC,OACE,cAACM,EAAD,UACGI,GACCA,EAAOE,KAAI,SAACC,GACV,OACE,oBAAmBC,UAAU,WAA7B,SACE,eAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaH,EAAMX,IAC3Be,MAAO,CAAEC,KAAMP,EAAUX,UAE3Bc,UAAU,OALZ,UAOE,qBACEA,UAAU,UACVK,IACEN,EAAMO,YAAN,yCACsCP,EAAMO,aACxCC,IAENC,IAAKT,EAAMU,gBAAkBV,EAAMW,QAErC,mBAAGV,UAAU,YAAb,SACGD,EAAMU,gBAAkBV,EAAMW,YAlB5BX,EAAMX,a,yGCPrBuB,E,4MACJR,MAAQ,CACNP,OAAQ,I,uDAGV,WAAqB,IAAD,OAClBpB,cAAcoC,MAAK,SAAChB,GAClB,EAAKiB,SAAS,CAAEjB,gB,oBAIpB,WACE,IAAQA,EAAWkB,KAAKX,MAAhBP,OACR,OACE,mCACE,cAAC,IAAD,CAAYA,OAAQA,EAAQC,SAAUiB,KAAKC,MAAMlB,iB,GAflCmB,aAqBRL","file":"static/js/4.19fd3097.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst apiKey = \"5b4dc2f477ae37de2dcdca88c213c32b\";\r\n\r\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице.\r\nexport const fetchMovies = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n//  поиск кинофильма по ключевому слову на странице фильмов.\r\nexport const searchMovies = async (query) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// запрос полной информации о фильме для страницы кинофильма.\r\nexport const fetchMovieDetail = async (id) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// запрос информации о актёрском составе для страницы кинофильма.\r\nexport const fetchMovieCast = async (id) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}&language=en-US`\r\n    );\r\n    return response.data.cast;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// запрос обзоров для страницы кинофильма.\r\nexport const fetchMovieReviews = async (id) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/defaultMovie.c4781ca5.png\";","import styled from \"styled-components\";\r\n\r\nexport const MovieListContainer = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  padding: 40px;\r\n  list-style: none;\r\n\r\n  .listItem {\r\n    margin: 10px;\r\n  }\r\n\r\n  .link {\r\n    text-decoration: none;\r\n  }\r\n\r\n  .listTitle {\r\n    text-align: center;\r\n    padding: 15px;\r\n    text-transform: uppercase;\r\n    font-weight: 700;\r\n    color: black;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { MovieListContainer } from \"./MovieListStyled\";\r\nimport defaultMovie from \"../../images/defaultMovie.png\";\r\n\r\nconst MoviesList = ({ movies, location, query }) => {\r\n  return (\r\n    <MovieListContainer>\r\n      {movies &&\r\n        movies.map((movie) => {\r\n          return (\r\n            <li key={movie.id} className=\"listItem\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/movies/${movie.id}`,\r\n                  state: { from: location, query },\r\n                }}\r\n                className=\"link\"\r\n              >\r\n                <img\r\n                  className=\"listImg\"\r\n                  src={\r\n                    movie.poster_path\r\n                      ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\r\n                      : defaultMovie\r\n                  }\r\n                  alt={movie.original_title || movie.title}\r\n                />\r\n                <p className=\"listTitle\">\r\n                  {movie.original_title || movie.title}\r\n                </p>\r\n              </Link>\r\n            </li>\r\n          );\r\n        })}\r\n    </MovieListContainer>\r\n  );\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n","import React, { Component } from \"react\";\r\nimport { fetchMovies } from \"../../services/api\";\r\nimport MoviesList from \"../../components/moviesList/MoviesList\";\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    movies: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetchMovies().then((movies) => {\r\n      this.setState({ movies });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n    return (\r\n      <>\r\n        <MoviesList movies={movies} location={this.props.location} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n"],"sourceRoot":""}